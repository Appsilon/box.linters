% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/box_unique_names_linter.R
\name{box_unique_names_linter}
\alias{box_unique_names_linter}
\title{\code{box} calls duplicate object names linter}
\usage{
box_unique_names_linter()
}
\description{
This linter detects and warns about duplicate object names introduced via
\code{box::use()} calls from the \code{box} package. It catches duplicate package and
module names. It also catches repeated use of the same alias or function name across packages
or modules, including conflicts between explicitly imported functions and wildcard (\code{...})
imports.
}
\details{
This ensures that all names introduced via \code{box::use()} are unique in the
current namespace, helping to avoid accidental overwrites and unexpected
behavior.

The linter supports the following \code{box::use()} import types:
\itemize{
\item Packages
\item Source modules
\item Individual functions
\item Wildcard (\code{...}) imports from packages or modules
\item Aliased imports (e.g. \code{alias = package} or \verb{alias = function})
}
}
\examples{
\dontrun{
# will produce lints
box::use(
  app/logic/module,
  app/view/module,
)

box::use(
  alias = app/logic/logic_module,
  alias = app/view/view_module,
)

box::use(
  dplyr[filter],
  stats[filter],
)

box::use(
  dplyr[filter],
  stats[...],
)

box::use(
  alias = dplyr,
  stats[alias = filter],
)

}
}
